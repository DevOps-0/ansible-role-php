---
- name: Ensure dirmngr is installed (gnupg dependency).
  apt:
    name: dirmngr
    state: "{{ state }}"

- name: add php {{ php_version }} repo
  apt_repository:
    repo: 'ppa:ondrej/php'
    update_cache: true
    validate_certs: false

- name: install/remove php-fpm and packages
  apt:
    name: [
      'php{{ php_version }}-fpm',
      'php{{ php_version }}',
      'php{{ php_version }}-common',
      'php{{ php_version }}-cli',
      'php{{ php_version }}-curl',
      'php{{ php_version }}-gd',
      'php{{ php_version }}-gmp',
      'php{{ php_version }}-imap',
      'php{{ php_version }}-intl',
      'php{{ php_version }}-readline',
      'php{{ php_version }}-opcache',
      'php{{ php_version }}-mysql',
      'php{{ php_version }}-json',
      'php{{ php_version }}-apcu',
      'php{{ php_version }}-bz2',
      'php{{ php_version }}-bcmath',
      'php{{ php_version }}-mbstring',
      'php{{ php_version }}-soap',
      'php{{ php_version }}-xml',
      'php{{ php_version }}-zip',
      'php{{ php_version }}-dev',
      'php{{ php_version }}-mongodb',
      'php{{ php_version }}-sqlite3',
      'php{{ php_version }}-redis',
      'pkg-config',
      'libssl-dev',
      'libpcre3-dev',
      'libsasl2-dev',
      'libmcrypt-dev'
    ]
    state: "{{ state }}"
    update_cache: true
    cache_valid_time: 5400
  register: phpfpm_result
  notify:
    - reload php-fpm

- name: enable php enable with apache
  apt:
    name: "libapache2-mod-php{{ php_version }}"
    state: "{{ state }}"
    update_cache: true
  when:
    - is_web_server_is_apache
  notify:
    - reload php-fpm

- name: update pecl channel
  changed_when: false
  command: pecl update-channels
  become: true
  when:
    - state == "{{ state }}"

- name: enable pecl extensions
  pear:
    name: "pecl/{{ item }}"
    state: "{{ state }}"
  ignore_errors: true
  with_items:
    - mcrypt-1.0.2

# composer
- name: download composer in ubuntu
  get_url:
    url: http://getcomposer.org/installer
    force: true
    dest: /tmp/composer
    mode: 0755

# yamllint disable
- name: install composer in ubuntu
  command: php /tmp/composer --install-dir=/usr/local/bin creates=/usr/local/bin/composer

- name: rename composer.phar to composer in ubuntu
  command: mv /usr/local/bin/composer.phar /usr/local/bin/composer creates=/usr/local/bin/composer

# yamllint enable
- name: make composer executable in ubuntu
  file:
    path: /usr/local/bin/composer
    mode: a+x
    state: file

#Configuration
- name: create phpfpm log is enabled
  file:
    path: "{{ log_path }}"
    mode: 0755
    state: directory

- name: create phpfpm log is enabled
  changed_when: false
  file:
    path: "{{ item }}"
    mode: 0644
    state: touch
  with_items:
    - "{{ log_path }}/php-pool-upstream-error.log"
    - "{{ log_path }}/php-ini-error.log"
    - "{{ log_path }}/php-pool-www-error.log"

- name: transfer pool.d php-fpm configuration
  template:
    src: "{{ item }}"
    dest: "{{ php_fpm_dir }}/pool.d/{{ item | basename }}"
    force: true
  with_fileglob:
    - ../templates/config/pool.d/*.*

- name: transfer mods-available php configuration
  template:
    src: "{{ item }}"
    dest: "{{ php_dir }}/mods-available/{{ item | basename }}"
    force: true
  with_fileglob:
    - ../templates/config/mods-available/*.ini

- name: transfer php.ini php-fpm configuration
  template:
    src: config/php.ini
    dest: "{{ php_fpm_dir }}/php.ini"
    force: true

- name: copy pecl extensions .ini files
  template:
    src: "{{ item }}"
    dest: "{{ php_dir }}/mods-available/{{ item | basename }}"
    force: true
  with_fileglob:
    - ../templates/config/mods-available/*.ini

- name: change php-fpm ownership
  file:
    path: "{{ php_dir }}"
    state: directory
    owner: root
    group: root
    recurse: true
  changed_when: "False"

- name: set is default installed version
  changed_when: false
  command: update-alternatives --set php /usr/bin/php{{ php_version }}
  become: true

- name: restart php
  changed_when: false
  command: /bin/true
  notify:
    - restart php-fpm